@model PRN222_Beverage_Website_Project.Models.Product

@{
    Layout = "~/Views/Shared/UserLayout.cshtml";
    ViewBag.Title = "Chi tiết sản phẩm";
}

<div class="container mt-4">
    <div class="row">
        <!-- Hình ảnh sản phẩm -->
        <div class="col-md-6 text-center">
            <img src="@Model.ProductImage" alt="@Model.ProductName" class="img-fluid" style="max-width: 100%; height: auto;">
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-md-6">
            <h2>@Model.ProductName</h2>
            <p>@Model.ProductDescription</p>
            <p><strong>Đã bán:</strong> @Model.ProductSoldCount</p>

            <h4>Giá: <span id="product-price">@Model.ProductVariants.FirstOrDefault()?.ProductVariantPrice.ToString("N0")</span> VNĐ</h4>

            <!-- Chọn kích thước -->
            <div>
                <p><strong>Chọn kích thước:</strong></p>
                @foreach (var variant in Model.ProductVariants)
                {
                    <button type="button" class="btn size-button @(variant == Model.ProductVariants.FirstOrDefault() ? "selected" : "")"
                            data-variant-id="@variant.ProductVariantId"
                            data-price="@variant.ProductVariantPrice"
                            onclick="selectSize(this)">
                        @variant.ProductSize.ProductSizeName
                    </button>
                }
            </div>

            <!-- Chọn số lượng -->
            <div class="mt-3">
                <input type="number" id="quantity" class="form-control" value="1" min="1">
            </div>

            <!-- Button thêm vào giỏ hàng -->
            <button class="btn btn-success mt-3" onclick="addToCart()">Thêm vào giỏ hàng</button>
        </div>
    </div>
</div>

<script>
    function selectSize(button) {
        // Cập nhật giá sản phẩm
        document.getElementById("product-price").innerText = parseInt(button.getAttribute("data-price")).toLocaleString();

        // Xóa class selected khỏi tất cả button
        document.querySelectorAll('.size-button').forEach(btn => btn.classList.remove('selected'));

        // Thêm class selected vào button được chọn
        button.classList.add('selected');
    }

        function addToCart() {
        let selectedSizeButton = document.querySelector(".size-button.selected");
        if (!selectedSizeButton) {
            alert("Vui lòng chọn kích thước!");
            return;
        }

        let variantId = selectedSizeButton.getAttribute("data-variant-id");
        let quantity = document.getElementById("quantity").value;

        fetch("/Cart/AddToCart", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: `variantId=${variantId}&quantity=${quantity}`
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            }
        })
        .catch(error => console.error("Lỗi:", error));
    }
</script>

<style>
    .size-button {
        padding: 10px 15px;
        font-size: 16px;
        border: 1px solid #ccc;
        background-color: white;
        color: black;
        cursor: pointer;
        margin: 5px;
    }

        .size-button.selected {
            background-color: #ff6600;
            color: white;
            border-color: #ff6600;
        }
</style>
